name: weekly-report

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 21 * * MON"  # 월요일(UTC) 주간 실행, 필요 시 수정

jobs:
  weekly:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install pandas google-auth google-auth-oauthlib google-api-python-client tzdata
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Prepare data dir
        run: mkdir -p ./data/daily

      - name: Debug (before fetch)
        run: |
          echo "== before fetch =="
          find . -maxdepth 2 -type d -print | sed 's/^/DIR  /'
          find . -maxdepth 2 -type f -name "*.csv" -print | sed 's/^/FILE /'

      # 필요하면 사용 (구글 드라이브에서 CSV 내려받기)
      - name: Fetch daily CSVs from Google Drive (optional)
        run: python scripts/fetch_from_gdrive.py
        continue-on-error: true
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}

      - name: Debug (after fetch)
        run: |
          echo "== after fetch =="
          find ./data -maxdepth 2 -type f -name "*.csv" -print | sed 's/^/FILE /'
          ls -al ./data/daily || true

      - name: Generate weekly report (per source)
        run: python scripts/weekly_report_plus.py --src all --data-dir ./data/daily

      - name: Ensure report files exist
        run: |
          test -f weekly_summary_oy_kor.json || echo '{"range":"데이터 없음"}' > weekly_summary_oy_kor.json
          test -f weekly_summary_oy_global.json || echo '{"range":"데이터 없음"}' > weekly_summary_oy_global.json
          test -f weekly_summary_amazon_us.json || echo '{"range":"데이터 없음"}' > weekly_summary_amazon_us.json
          test -f weekly_summary_qoo10_jp.json || echo '{"range":"데이터 없음"}' > weekly_summary_qoo10_jp.json
          test -f weekly_summary_daiso_kr.json || echo '{"range":"데이터 없음"}' > weekly_summary_daiso_kr.json

      - name: Post to Slack (per source)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          post() {
            BODY=$(jq -Rs . < "$1")
            curl -sS -X POST -H 'Content-type: application/json' \
                 --data "{\"text\": ${BODY}}" "$SLACK_WEBHOOK_URL" > /dev/null
          }
          if [ -n "${SLACK_WEBHOOK_URL:-}" ]; then
            for f in slack_*.txt; do
              [ -f "$f" ] && post "$f"
            done
          else
            echo "SLACK_WEBHOOK_URL not set; skipping Slack posts."
          fi

      - name: Build HTML
        id: build_html
        run: |
          HTML_FILE=$(python scripts/build_html_report.py)
          echo "html=${HTML_FILE}" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: weekly-report
          path: ${{ steps.build_html.outputs.html }}
