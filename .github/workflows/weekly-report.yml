name: Weekly Report → Slack & Email

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"  # 매주 월요일 09:00 KST (UTC 00:00)

jobs:
  weekly:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        src: [oy_kor, oy_global, amazon_us, qoo10_jp, daiso_kr]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          python -m pip install --upgrade pip
          pip install pandas

      - name: Generate weekly report (per source)
        env:
          DATA_DIR: ./data/daily
          MIN_DAYS: 3
          FLASH_MAX_DAYS: 2
        run: |
          python scripts/weekly_report_plus.py \
            --src ${{ matrix.src }} \
            --split \
            --data-dir "$DATA_DIR" \
            --min-days $MIN_DAYS

      - name: Ensure report files exist
        run: |
          for f in "slack_${{ matrix.src }}.txt" "weekly_summary_${{ matrix.src }}.json"; do
            if [ ! -f "$f" ]; then echo "데이터 없음" > "$f"; fi
          done

      # ---------- Slack ----------
      - name: Send to Slack (only if webhook exists)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        shell: bash
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            BODY=$(jq -Rs . < "slack_${{ matrix.src }}.txt")
            curl -sS -X POST -H 'Content-type: application/json' \
              --data "{\"text\": ${BODY} }" \
              "$SLACK_WEBHOOK_URL"
          else
            echo "SLACK_WEBHOOK_URL 비어있음 → 스킵"
          fi

      # ---------- Email ----------
      - id: meta
        shell: bash
        run: |
          RANGE=$(jq -r '.range // "데이터 없음"' "weekly_summary_${{ matrix.src }}.json")
          case "${{ matrix.src }}" in
            oy_kor)    TITLE="올리브영 국내 Top100" ;;
            oy_global) TITLE="올리브영 글로벌 Top100" ;;
            amazon_us) TITLE="아마존 US Top100" ;;
            qoo10_jp)  TITLE="큐텐 재팬 뷰티 Top200" ;;
            daiso_kr)  TITLE="다이소몰 뷰티/위생 Top200" ;;
          esac
          {
            echo "range=$RANGE"
            echo "title=$TITLE"
          } >> "$GITHUB_OUTPUT"

      # ✅ 멀티라인 output을 '고유 구분자'로 안전하게 기록
      - id: body
        shell: bash
        run: |
          DELIM="BODY_$(date +%s)_$RANDOM"
          {
            echo "text<<$DELIM"
            cat "slack_${{ matrix.src }}.txt"
            echo "$DELIM"
          } >> "$GITHUB_OUTPUT"

      - name: Send report via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          from: ${{ secrets.MAIL_FROM }}
          to: ${{ secrets.MAIL_TO }}
          subject: "[주간 리포트] ${{ steps.meta.outputs.title }} (${{ steps.meta.outputs.range }})"
          content_type: text/plain; charset=UTF-8
          body: ${{ steps.body.outputs.text }}
          attachments: |
            weekly_summary_${{ matrix.src }}.json
            slack_${{ matrix.src }}.txt
